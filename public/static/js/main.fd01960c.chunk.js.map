{"version":3,"sources":["fixtures/initialStates.js","hooks/useForm.js","components/auth/FeedbackForm.jsx","firebase/config.js","helpers/fetch.js","types/types.js","helpers/prepare-events.js","actions/calendar.js","actions/auth.js","components/auth/GoogleAuthButton.jsx","components/auth/GithubAuthButton.jsx","components/auth/LoginScreen.jsx","hooks/useValidate.js","components/calendar/CalendarEvent.jsx","helpers/modal-styles.js","actions/ui.js","components/calendar/CalendarModal.jsx","components/ui/Navbar.jsx","helpers/calendar-messages-es.js","components/ui/AddNewFab.jsx","components/ui/DeleteEventFab.jsx","components/calendar/CalendarScreen.jsx","components/ui/LoadingSpinner.jsx","routers/PrivateRoute.js","routers/PublicRoute.js","routers/AppRouter.js","reducers/authReducer.js","reducers/calendarReducer.js","reducers/uiReducer.js","reducers/rootReducer.js","store/store.js","CalendarApp.jsx","index.js"],"names":["initialStateLogin","lEmail","lPassword","initialStateRegister","rName","rEmail","rPassword","rPassword2","initialCheckValues","initialValidationResults","rEmailValid","rPasswordValid","rPasswordValid2","useForm","initialForm","_useState","useState","_useState2","Object","slicedToArray","formValues","setFormValues","_ref","target","objectSpread","defineProperty","name","value","FeedbackForm","positive","negative","react_default","a","createElement","react","className","googleAuthProvider","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","getFirestore","GoogleAuthProvider","githubAuthProvider","GithubAuthProvider","fetchWithoutToken","endpoint","data","method","arguments","length","undefined","type","url","concat","fetch","headers","Content-type","body","JSON","stringify","fetchWithToken","token","localStorage","getItem","x-token","types","prepareEvents","map","e","end","moment","toDate","start","eventStartAddNew","event","asyncToGenerator","regenerator_default","mark","_callee","dispatch","getState","_getState$auth","uid","resp","wrap","_context","prev","next","auth","sent","json","ok","_id","user","eventAddNew","t0","console","log","stop","_x","_x2","apply","this","payload","eventUpdated","eventLoaded","events","eventSetActive","eventDeleted","checkingFinish","login","startLogout","tokenLocalStorage","tokenInitDateLocalStorage","removeItem","logout","GoogleAuthButton","useDispatch","onClick","_ref3","_callee4","_context4","getAuth","signInWithPopup","then","_ref5","_callee3","_ref4","error","_context3","email","displayName","setItem","Date","getTime","errors","msg","Swal","fire","_x4","catch","err","_x3","src","alt","GithubAuthButton","_ref6","_callee6","_context6","_ref8","_callee5","_ref7","_context5","_x6","_ref9","code","_x5","LoginScreen","_useForm","_useForm2","formLoginValues","handleLoginInputChange","_useForm3","_useForm4","formRegisterValues","handleRegisterInputChange","_useValidate","checkValues","setCheckValues","_useState3","_useState4","resultsValidate","setResultsValidate","useEffect","validator","isEmail","isStrongPassword","equals","useValidate","_useValidate2","handleInputCheckValues","validationResults","handleInputChange","onSubmit","password","preventDefault","placeholder","onChange","_ref2","_callee2","_context2","FeedbackForm_FeedbackForm","GoogleAuthButton_GoogleAuthButton","GithubAuthButton_GithubAuthButton","CalendarEvent","title","customStyles","content","top","left","right","bottom","marginRight","transform","uiOpenModal","Modal","setAppElement","now","minutes","seconds","add","nowPlusOne","clone","initEvent","notes","CalendarModal","activeEvent","useSelector","state","calendar","modalOpen","ui","setDateStart","setEndStart","_useState5","_useState6","isTitleValid","setIsTitleValid","_useState7","_useState8","closeModal","trim","lib_default","isOpen","onRequestClose","style","overlayClassName","closeTimeoutMS","momentStart","isSameOrBefore","icon","text","id","entry_default","format","amPmAriaLabel","autoComplete","rows","ai_index_esm","Navbar","bi_index_esm","size","io_index_esm","messages","allDay","previous","today","month","week","day","agenda","date","time","noEventsInRange","showMore","total","AddNewFab","bs_index_esm","DeleteEventFab","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","result","isConfirmed","_x7","locale","localizer","momentLocalizer","CalendarScreen","_useSelector","view","setView","Navbar_Navbar","react_big_calendar_esm","startAccessor","endAccessor","eventPropGetter","isSelected","backgroundColor","borderRadius","color","opacity","onSelectEvent","onDoubleClickEvent","onView","onSelectSlot","action","_e$title","_e$notes","selectable","components","AddNewFab_AddNewFab","DeleteEventFab_DeleteEventFab","CalendarModal_CalendarModal","LoadingSpinner","react_loader_spinner_esm","height","width","ariaLabel","PrivateRoute","children","react_router","to","PublicRoute","AppRouter","checking","_ref10","_callee7","_context7","abrupt","LoadingSpinner_LoadingSpinner","react_router_dom","path","element","PublicRoute_PublicRoute","LoginScreen_LoginScreen","PrivateRoute_PrivateRoute","CalendarScreen_CalendarScreen","initialState","rootReducer","combineReducers","toConsumableArray","filter","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","CalendarApp","es","AppRouter_AppRouter","render","CalendarApp_CalendarApp","document","getElementById"],"mappings":"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","file":"static/js/main.fd01960c.chunk.js","sourcesContent":["\r\nconst initialStateLogin = {\r\n    lEmail: '',\r\n    lPassword: '',\r\n}\r\n\r\nconst initialStateRegister = {\r\n    rName: '',\r\n    rEmail: '',\r\n    rPassword: '',\r\n    rPassword2: '',\r\n}\r\n\r\nconst initialCheckValues = {\r\n    rEmail: '',\r\n    rPassword: '',\r\n    rPassword2: ''\r\n}\r\n\r\nconst initialValidationResults = {\r\n    rEmailValid: false,\r\n    rPasswordValid: false,\r\n    rPasswordValid2: false,\r\n}\r\n\r\nexport {\r\n    initialStateLogin,\r\n    initialStateRegister,\r\n    initialValidationResults,\r\n    initialCheckValues\r\n}","import { useState } from 'react';\r\n\r\nexport const useForm = (initialForm) => {\r\n\r\n    const [ formValues, setFormValues ] = useState(initialForm);\r\n\r\n    // Recibe el evento 'e'\r\n    const handleInputChange = ({ target }) => {\r\n        setFormValues({\r\n            ...formValues,\r\n            [ target.name ]: target.value\r\n        })\r\n    }\r\n\r\n    const reset = (initialForm) => {\r\n        setFormValues(initialForm);\r\n    }\r\n\r\n    return [ formValues, handleInputChange, reset ];\r\n\r\n}\r\n\r\n","import React, { Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nexport const FeedbackForm = ({ positive, negative }) => {\r\n    return (\r\n      <Fragment>\r\n        \r\n        {\r\n            positive && \r\n            (\r\n              <div className=\"valid-feedback\">\r\n                { positive }\r\n              </div>\r\n            )\r\n            \r\n        }\r\n\r\n        {\r\n            negative && \r\n            (\r\n              <div className=\"invalid-feedback\">\r\n                { negative }\r\n              </div>\r\n            )\r\n            \r\n        }\r\n\r\n      </Fragment>\r\n  )\r\n}\r\n\r\n\r\nFeedbackForm.propTypes = {\r\n    positive: PropTypes.string,\r\n    negative: PropTypes.string\r\n}\r\n\r\n/* FeedbackForm.defaultProps = {\r\n  positive: 'A positive feedback',\r\n  negative: 'A negative feedback'\r\n} */\r\n\r\n\r\n","\r\nimport { initializeApp } from \"firebase/app\";\r\nimport { getFirestore } from \"firebase/firestore\"\r\nimport { GoogleAuthProvider, GithubAuthProvider } from 'firebase/auth';\r\n//import { getAnalytics } from \"firebase/analytics\";\r\n// TODO: Add SDKs for Firebase products that you want to use\r\n// https://firebase.google.com/docs/web/setup#available-libraries\r\n\r\n// Your web app's Firebase configuration\r\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyBTaCnh_pp6rxQnNsqxVEZ4ug5fhILI5v8\",\r\n  authDomain: \"mern-calendar.firebaseapp.com\",\r\n  projectId: \"mern-calendar\",\r\n  storageBucket: \"mern-calendar.appspot.com\",\r\n  messagingSenderId: \"262050419112\",\r\n  appId: \"1:262050419112:web:b308b88bd8244559edcd9d\",\r\n  measurementId: \"G-RKGSCLMGWT\"\r\n};\r\n\r\n// Initialize Firebase\r\nconst app = initializeApp(firebaseConfig);\r\n//const analytics = getAnalytics(app);\r\n\r\n// Base de datos\r\nconst db = getFirestore();\r\n\r\n// Auth (Google)\r\nconst googleAuthProvider = new GoogleAuthProvider();\r\nconst githubAuthProvider = new GithubAuthProvider();\r\n\r\nexport {\r\n    db, googleAuthProvider, githubAuthProvider\r\n}","\r\n\r\n\r\nconst fetchWithoutToken = ( endpoint, data, method = 'GET', type = 'auth' ) => {\r\n\r\n    // localhost:4000/api/endpoint\r\n    const baseUrl = (type === 'auth')? 'https://api-auth-calendar-git-sarahx3-dev.apps.sandbox.x8i5.p1.openshiftapps.com/api' \r\n                            : 'https://api-events-git-sarahx3-dev.apps.sandbox.x8i5.p1.openshiftapps.com/api';\r\n    const url = `${ baseUrl }/${ endpoint }`;\r\n    \r\n    switch (method) {\r\n        case 'GET':\r\n            return fetch(url);\r\n    \r\n        default:\r\n            return fetch(url, {\r\n                method,\r\n                headers: {\r\n                    'Content-type': 'application/json'\r\n                },\r\n                body: JSON.stringify(data)\r\n            });   \r\n    }\r\n}\r\n\r\nconst fetchWithToken = ( endpoint, data, method = 'GET', type = 'auth') => {\r\n\r\n    const baseUrl = (type === 'auth')? 'https://api-auth-calendar-git-sarahx3-dev.apps.sandbox.x8i5.p1.openshiftapps.com/api' \r\n                            : 'https://api-events-git-sarahx3-dev.apps.sandbox.x8i5.p1.openshiftapps.com/api';\r\n    const url = `${ baseUrl }/${ endpoint }`;\r\n    const token = localStorage.getItem('token') || '';\r\n\r\n    switch (method) {\r\n        case 'GET':\r\n            return fetch(url, {\r\n                method,\r\n                headers: {\r\n                    'x-token': token\r\n                }\r\n            });\r\n    \r\n        default:\r\n            return fetch(url, {\r\n                method,\r\n                headers: {\r\n                    'Content-type': 'application/json',\r\n                    'x-token': token\r\n                },\r\n                body: JSON.stringify(data)\r\n            });\r\n\r\n    }\r\n\r\n}\r\n\r\nexport {\r\n    fetchWithoutToken,\r\n    fetchWithToken\r\n}","\r\nexport const types = {\r\n\r\n    uiOpenModal: '[ui] Open modal',\r\n    uiCloseModal: '[ui] Close modal',\r\n\r\n    eventStartAddNew: '[calendar] Start add new',\r\n    eventAddNew: '[calendar] Add new event',\r\n    eventSetActive: '[calendar] Set active event',\r\n    eventUpdated: '[calendar] Event updated',\r\n    eventDeleted: '[calendar] Event deleted',\r\n    eventLoaded: '[calendar] Events loaded',\r\n    eventClear: '[calendar] Events cleared',\r\n\r\n    authCheckingFinish: '[auth] Finished checking state',\r\n    authStartLogin: '[auth] Start login', // asincrona\r\n    authLogin: '[auth] Login', // sincrona\r\n    authStartRegister: '[auth] Start register',\r\n    authStartTokenRenewal: '[auth] Start token renewal',\r\n    authLogout: '[auth] Logout',\r\n\r\n}","import moment from 'moment';\r\n\r\nexport const prepareEvents = (events = []) => {\r\n\r\n    return events.map(\r\n        e => ({\r\n            ...e,\r\n            end: moment(e.end).toDate(),\r\n            start: moment(e.start).toDate(),\r\n        })\r\n    )\r\n\r\n}\r\n\r\n ","import Swal from 'sweetalert2';\r\nimport { fetchWithToken } from '../helpers/fetch';\r\nimport { prepareEvents } from '../helpers/prepare-events';\r\nimport { types } from '../types/types';\r\n\r\n// Asincrono, guardar en la base de datos\r\nexport const eventStartAddNew = (event) => {\r\n\r\n    return async (dispatch, getState) => {\r\n\r\n        const { uid, name } = getState().auth;\r\n\r\n        try {\r\n            \r\n            const resp = await fetchWithToken('events', event, 'POST', 'events');\r\n            const body = await resp.json();\r\n\r\n\r\n            if (body.ok){\r\n                event._id = body.event._id\r\n                event.user = uid;\r\n                dispatch(eventAddNew(event));\r\n            }\r\n\r\n\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n\r\n    }\r\n\r\n}\r\n\r\n// sincrono, actualizar el store\r\nconst eventAddNew = (event) => ({\r\n    type: types.eventAddNew,\r\n    payload: event\r\n});\r\n\r\n\r\n\r\nexport const eventStartUpdate = (event) => {\r\n    return async (dispatch) => {\r\n\r\n        try {\r\n            // events/eventId\r\n            const resp = await fetchWithToken(`events/${ event._id }`, event, 'PUT', 'events');\r\n            const body = await resp.json();\r\n\r\n            if (body.ok){\r\n                // no puede ser el evento que retorna el body porque hay que parsear las fechas con el helper\r\n                dispatch(eventUpdated(event));\r\n            }\r\n            else {\r\n                Swal.fire('Error', body.errors.id.msg, 'error');\r\n            }\r\n\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n\r\n    }\r\n}\r\n\r\nconst eventUpdated = (event) => ({\r\n    type: types.eventUpdated,\r\n    payload: event\r\n});\r\n \r\n\r\n\r\nexport const eventStartLoading = () => {\r\n\r\n    return async (dispatch) => {\r\n\r\n        try {\r\n            \r\n            const resp = await fetchWithToken('events', {}, 'GET', 'events');\r\n            const body = await resp.json();\r\n            \r\n            if (body.ok){\r\n                console.log('body', body)\r\n                const events = prepareEvents(body.events);\r\n                dispatch(eventLoaded(events));\r\n            }\r\n\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n\r\n    }\r\n\r\n}\r\n\r\nconst eventLoaded = (events) => ({\r\n    type: types.eventLoaded,\r\n    payload: events\r\n});\r\n\r\n\r\n\r\nexport const eventSetActive = (event) => ({\r\n    type: types.eventSetActive,\r\n    payload: event\r\n});\r\n\r\n\r\n// Asincrono\r\nexport const eventStartDelete = () => {\r\n\r\n    return async (dispatch, getState) => {\r\n\r\n        const { _id } = getState().calendar.activeEvent;\r\n\r\n        try {\r\n            \r\n   \r\n            Swal.fire({\r\n                title: 'Estas seguro?',\r\n                text: 'Esto no será revertible!',\r\n                icon: 'warning',\r\n                showCancelButton: true,\r\n                confirmButtonColor: '#3085d6',\r\n                cancelButtonColor: '#d33',\r\n                confirmButtonText: 'Si, eliminar!'\r\n                }).then( async (result) => { \r\n                if (result.isConfirmed) {\r\n                    const resp = await fetchWithToken(`events/${ _id }`, {}, 'DELETE', 'events');\r\n                    const body = await resp.json();\r\n\r\n\r\n                    if (body.ok){\r\n                        dispatch(eventDeleted());\r\n                        Swal.fire(\r\n                            'Eliminado!',\r\n                            'El evento ha sido eliminado correctamente.',\r\n                            'success'\r\n                        )\r\n                    } \r\n                    \r\n                    else {\r\n                        Swal.fire('Error', 'No tiene autorización para eliminar el evento', 'error');\r\n                    }\r\n                }\r\n                });\r\n                \r\n            \r\n\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n               \r\n    }\r\n\r\n}\r\n\r\n// sincrono\r\nconst eventDeleted = () => ({ type: types.eventDeleted });\r\n\r\nexport const eventCleared = () => ({ type: types.eventClear });\r\n","import Swal from 'sweetalert2';\r\nimport { googleAuthProvider, githubAuthProvider } from '../firebase/config';\r\nimport { getAuth, signInWithPopup } from 'firebase/auth';\r\nimport { fetchWithoutToken, fetchWithToken } from '../helpers/fetch';\r\nimport { types } from '../types/types';\r\nimport { eventCleared } from './calendar';\r\n//import { fetchWithoutTokenAxios } from '../helpers/fetchAxios';\r\n\r\nexport const startLogin = (email, password) => {\r\n    // asincrona\r\n    return async ( dispatch ) => {\r\n    \r\n        // ** FETCH API ** //\r\n        try {\r\n            \r\n            const resp = await fetchWithoutToken('auth', { email, password }, 'POST');\r\n            const body = await resp.json();\r\n\r\n\r\n            if (body.ok) {\r\n                localStorage.setItem('token', body.token);\r\n                localStorage.setItem('token-init-date', new Date().getTime());\r\n            \r\n                \r\n                dispatch(login({\r\n                    uid: body.uid,\r\n                    name: body.name\r\n                }))\r\n            }\r\n            else {\r\n                const error = body.errors? body.errors.email.msg : body.msg;\r\n\r\n                Swal.fire(\r\n                    'Error',\r\n                    error,\r\n                    'error'\r\n                )\r\n            }\r\n\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n               \r\n    }\r\n}\r\n\r\n\r\nexport const startRegister = (name, email, password) => {\r\n    return async (dispatch) => {\r\n\r\n        try {\r\n            \r\n            // ** FETCH API ** //\r\n            const resp = await fetchWithoutToken('auth/new', { name, email, password }, 'POST');\r\n            const body = await resp.json();\r\n\r\n            if (body.ok){\r\n                localStorage.setItem('token', body.token);\r\n                localStorage.setItem('token-init-date', new Date().getTime());\r\n                \r\n                dispatch(login({\r\n                    uid: body.uid,\r\n                    name: body.name\r\n                }));\r\n                \r\n            } else {\r\n                const error = body.errors? body.errors.email.msg : body.msg;\r\n                Swal.fire(\r\n                    'Error',\r\n                    error,\r\n                    'error'\r\n                )\r\n            }\r\n\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport const startRegisterWithFirebase = () => {\r\n\r\n    return async (dispatch) => {\r\n\r\n        const auth = getAuth();\r\n        signInWithPopup(auth, googleAuthProvider).then( async ({ user }) => {\r\n    \r\n            const data = {\r\n                uid: user.uid,\r\n                email: user.email,\r\n                name: user.displayName\r\n            }\r\n\r\n            const resp = await fetchWithoutToken('auth/login', data, 'POST');\r\n            const body = await resp.json();\r\n\r\n            if (body.ok){\r\n\r\n                localStorage.setItem('token', body.token);\r\n                localStorage.setItem('token-init-date', new Date().getTime());\r\n\r\n                dispatch(login({\r\n                    uid: body.uid,\r\n                    name: body.name\r\n                }))\r\n            }\r\n            else {\r\n                const error = body.errors? body.errors.email.msg : body.msg;\r\n                Swal.fire(\r\n                    'Error',\r\n                    error,\r\n                    'error'\r\n                )\r\n            }\r\n\r\n        }).catch(err => {\r\n\r\n        });\r\n    }\r\n} \r\n\r\nexport const startRegisterWithGithub = () => {\r\n\r\n    return async (dispatch) => {\r\n\r\n        const auth = getAuth();\r\n        signInWithPopup(auth, githubAuthProvider)\r\n        .then(async ({ user }) => {\r\n            const data = {\r\n                uid: user.uid,\r\n                email: user.email,\r\n                name: user.displayName\r\n            }\r\n\r\n            //api\r\n            const resp = await fetchWithToken('auth/login', data, 'POST');\r\n            const body = await resp.json();\r\n\r\n            if (body.ok){\r\n\r\n                localStorage.setItem('token', body.token);\r\n                localStorage.setItem('token-init-date', new Date().getTime());\r\n\r\n                dispatch(login({\r\n                    uid: body.uid,\r\n                    name: body.name\r\n                }))\r\n            }\r\n            else {\r\n                Swal.fire(\r\n                    'Error',\r\n                    'Error en la autenticacion',\r\n                    'error'\r\n                )\r\n            }\r\n        })\r\n        .catch(({ code }) => {\r\n            Swal.fire(\r\n                'Ha ocurrido un error',\r\n                code,\r\n                'error'\r\n            );\r\n        })\r\n\r\n    }\r\n\r\n}\r\n\r\nexport const startChecking = () => {\r\n    return async (dispatch) => {\r\n\r\n        const tokenLocalStorage = !!(localStorage.getItem('token') || '')\r\n\r\n        if (!tokenLocalStorage){\r\n            return dispatch(checkingFinish());\r\n        }\r\n\r\n\r\n        // el token esta en el localstorage\r\n        const resp = await fetchWithToken('auth/renew');\r\n        const body = await resp.json();\r\n\r\n        if (body.ok){\r\n            localStorage.setItem('token', body.token);\r\n            localStorage.setItem('token-init-date', new Date().getTime());\r\n        \r\n            dispatch(login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }));\r\n            \r\n        }\r\n        /* else {\r\n            Swal.fire(\r\n                'Error',\r\n                body.msg,\r\n                'error'\r\n            )\r\n        } */\r\n\r\n        dispatch(checkingFinish());\r\n    }\r\n}\r\n\r\nconst checkingFinish = () => ({ type: types.authCheckingFinish });\r\n\r\nconst login = ( user ) => ({\r\n    type: types.authLogin,\r\n    payload: user\r\n});\r\n\r\nexport const startLogout = () => {\r\n    return (dispatch) => {\r\n        const tokenLocalStorage = !!(localStorage.getItem('token') || '')\r\n        const tokenInitDateLocalStorage = !!(localStorage.getItem('token-init-date') || '')\r\n        if (tokenLocalStorage && tokenInitDateLocalStorage){\r\n            localStorage.removeItem('token');\r\n            localStorage.removeItem('token-init-date');\r\n            dispatch(eventCleared());\r\n            dispatch(logout());\r\n        }\r\n    }\r\n}\r\n\r\nexport const logout = () => ({ type: types.authLogout });\r\n\r\n","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { startRegisterWithFirebase } from '../../actions/auth';\r\n\r\nimport '../../css/google-btn.css';\r\n\r\n\r\nexport const GoogleAuthButton = () => {\r\n\r\n   const dispatch = useDispatch();\r\n\r\n    const handleLoginWithGoogle = () => {\r\n        dispatch(startRegisterWithFirebase());\r\n    }\r\n\r\n    return (\r\n        <div className=\"google-btn\" onClick={ handleLoginWithGoogle }>\r\n            <div className=\"google-icon-wrapper\">\r\n                <img className=\"google-icon-svg\" src=\"https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg\" alt=\"google icon\"/>\r\n            </div>\r\n            <p className=\"btn-text\"><b>Sign in with Google</b></p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { startRegisterWithGithub } from '../../actions/auth';\r\n\r\nimport '../../css/google-btn.css';\r\n\r\n\r\nexport const GithubAuthButton = () => {\r\n\r\n   const dispatch = useDispatch();\r\n\r\n    const handleLoginWithGoogle = () => {\r\n        dispatch(startRegisterWithGithub());\r\n    }\r\n\r\n    return (\r\n        <div className=\"google-btn\" onClick={ handleLoginWithGoogle }>\r\n            <div className=\"google-icon-wrapper\">\r\n                <img className=\"google-icon-svg\" src=\"https://cdn-icons-png.flaticon.com/512/25/25231.png\" alt=\"github icon\" />\r\n            </div>\r\n            <p className=\"btn-text\"><b>Sign in with GitHub</b></p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { initialStateLogin, initialCheckValues, initialValidationResults, initialStateRegister } from '../../fixtures/initialStates';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport { useValidate } from '../../hooks/useValidate';\r\nimport { FeedbackForm } from './FeedbackForm';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport '../../css/login.css';\r\nimport { startLogin, startRegister } from '../../actions/auth';\r\nimport { GoogleAuthButton } from './GoogleAuthButton';\r\nimport { GithubAuthButton } from './GithubAuthButton';\r\n\r\nexport const LoginScreen = () => {\r\n\r\n    const [ formLoginValues, handleLoginInputChange ] = useForm(initialStateLogin);\r\n    const [ formRegisterValues, handleRegisterInputChange ] = useForm(initialStateRegister);\r\n    const [ , handleInputCheckValues, validationResults ] = useValidate(\r\n        initialCheckValues, initialValidationResults\r\n    );\r\n\r\n    // useDispatch\r\n    const dispatch = useDispatch();\r\n   \r\n\r\n    // Resultados de la validacion\r\n    const { rEmailValid, rPasswordValid, rPasswordValid2  } = validationResults;\r\n\r\n    // Valores del login\r\n    const { lEmail, lPassword } = formLoginValues;\r\n\r\n    // Valores del register\r\n    const { rName, rEmail, rPassword, rPassword2 } = formRegisterValues;\r\n\r\n    const handleLoginSubmit = (e) => {\r\n        e.preventDefault();\r\n        dispatch(startLogin(lEmail, lPassword));\r\n    }\r\n\r\n    const handleRegisterSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (rEmailValid && rPasswordValid && rPasswordValid2) {\r\n            dispatch(startRegister(rName, rEmail, rPassword));\r\n        }\r\n    }\r\n\r\n    const handleInputChange = (e) => {\r\n        handleRegisterInputChange(e); // formRegisterValues\r\n        handleInputCheckValues(e); // formValidateValues\r\n    }\r\n\r\n    return (\r\n        <div className=\"container login-container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-6 login-form-1\">\r\n                    <h3>Ingreso</h3>\r\n                    <form onSubmit={ handleLoginSubmit }>\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Correo\"\r\n                                name=\"lEmail\"\r\n                                value={ lEmail }\r\n                                onChange={ handleLoginInputChange }\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className='form-control'\r\n                                placeholder=\"Contraseña\"\r\n                                name=\"lPassword\"\r\n                                value={ lPassword }\r\n                                onChange={ handleLoginInputChange }\r\n                            />\r\n                        \r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"submit\"\r\n                                className=\"btnSubmit\"\r\n                                value=\"Login\" \r\n                            />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n\r\n                <div className=\"col-md-6 login-form-2\">\r\n                    <h3>Registro</h3>\r\n                    <form onSubmit={ handleRegisterSubmit }>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Nombre\"\r\n                                name=\"rName\"\r\n                                onChange={ handleInputChange }\r\n                                value={ rName }\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"email\"\r\n                                className={ `form-control ${ rEmail && (rEmailValid? 'is-valid' : 'is-invalid') }` }\r\n                                placeholder=\"Correo\"\r\n                                name=\"rEmail\"\r\n                                onChange={ handleInputChange }\r\n                                value={ rEmail }\r\n                            />\r\n                            {\r\n                                rEmail && \r\n                                (\r\n                                    <FeedbackForm \r\n                                        negative={ `Por favor, proporcione un email válido.`}\r\n                                        positive={ `Email válido.` }\r\n                                    />\r\n                                )\r\n                            }\r\n                            \r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className={ `form-control ${ rPassword && (rPasswordValid? 'is-valid' : 'is-invalid') }` }\r\n                                placeholder=\"Contraseña\" \r\n                                name=\"rPassword\"\r\n                                onChange={ handleInputChange }\r\n                                value={ rPassword }\r\n                            />\r\n                            {\r\n                                rPassword && \r\n                                (\r\n                                    <FeedbackForm \r\n                                        negative={ `Por favor, proporcione al menos 8 caracteres (mayusculas, minusculas, numeros y c. especiales).`}\r\n                                        positive={ `La contraseña cumple con los requisitos.` }\r\n                                    />\r\n                                )\r\n                            }\r\n                            \r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className={ `form-control ${ rPassword2 && (rPasswordValid2? 'is-valid' : 'is-invalid') }` }\r\n                                placeholder=\"Repita la contraseña\" \r\n                                name=\"rPassword2\"\r\n                                onChange={ handleInputChange }\r\n                                value={ rPassword2 }\r\n                            />\r\n                            {\r\n                                rPassword2 && \r\n                                (\r\n                                    <FeedbackForm \r\n                                        negative={ `Las contraseñas no coinciden.`}\r\n                                        positive={ `Las contraseñas coinciden.` }\r\n                                    />\r\n                                )\r\n                            }\r\n                            \r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"submit\" \r\n                                className=\"btnSubmit\" \r\n                                value=\"Crear cuenta\" />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n            <div className=\"row mt-5 login-connect\">\r\n                <div className=\"col\">\r\n                    <GoogleAuthButton />\r\n                </div>\r\n                <div className=\"col\">\r\n                    <GithubAuthButton />\r\n                </div>\r\n            </div>\r\n                \r\n        </div>\r\n    )\r\n}","import { useEffect, useState } from 'react';\r\nimport validator from 'validator';\r\n\r\n\r\nexport const useValidate = ( initialCheckValues, initialValidationResults ) => {\r\n\r\n    // useState: valores a validar\r\n    const [ checkValues , setCheckValues ] = useState(initialCheckValues);\r\n    \r\n    // useState: resultados de las validaciones\r\n    const [ resultsValidate, setResultsValidate ] = useState(initialValidationResults); \r\n\r\n    // handleInputChange: modificacion de los datos a validar\r\n    const handleInputChange = ({ target }) => {\r\n        setCheckValues({\r\n            ...checkValues,\r\n            [ target.name ]: target.value\r\n        })\r\n    }\r\n\r\n    // Datos a validar \r\n    const { rEmail, rPassword, rPassword2 } = checkValues;\r\n\r\n    // Realizar validaciones cada que cambian los 'checkValues'\r\n    useEffect(() => {\r\n\r\n        setResultsValidate({\r\n            ...resultsValidate,\r\n            rEmailValid: validator.isEmail(rEmail),\r\n            rPasswordValid: validator.isStrongPassword(rPassword),\r\n            rPasswordValid2: validator.equals(rPassword, rPassword2),\r\n        });    \r\n        \r\n        \r\n    }, [ checkValues ]);\r\n\r\n\r\n    // [ datos a validar, modificar datos a validar, resultados de la validacion ]\r\n    return [ checkValues, handleInputChange, resultsValidate ];\r\n\r\n}\r\n","import React from 'react'\r\n\r\nexport const CalendarEvent = ({ event }) => {\r\n\r\n    const { title,  } = event;\r\n\r\n    return (\r\n        <div>\r\n            <strong>{ title }</strong>\r\n        </div>\r\n    )\r\n}\r\n","export const customStyles = {\r\n    content: {\r\n      top: '50%',\r\n      left: '50%',\r\n      right: 'auto',\r\n      bottom: 'auto',\r\n      marginRight: '-50%',\r\n      transform: 'translate(-50%, -50%)',\r\n    },\r\n};","import { types } from \"../types/types\";\r\n\r\nexport const uiOpenModal = () => ({ type: types.uiOpenModal });\r\nexport const uiCloseModal = () => ({ type: types.uiCloseModal });","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Modal from 'react-modal';\r\nimport DateTimePicker from 'react-datetime-picker';\r\nimport Swal from 'sweetalert2';\r\nimport { customStyles } from '../../helpers/modal-styles';\r\n// icons\r\nimport { AiFillSave } from 'react-icons/ai'\r\nimport { uiCloseModal } from '../../actions/ui';\r\nimport { eventSetActive, eventStartAddNew, eventStartUpdate } from '../../actions/calendar';\r\nimport moment from 'moment';\r\n\r\nimport '../../css/modal.css';\r\n\r\nModal.setAppElement('#root');\r\n\r\nconst now = moment().minutes(0).seconds(0).add(1, 'hours');\r\nconst nowPlusOne = now.clone().add(1, 'hours');\r\nconst initEvent = {\r\n    title: '',\r\n    start: now.toDate(),\r\n    end: nowPlusOne.toDate(),\r\n    notes: ''\r\n}\r\n\r\nexport const CalendarModal = () => {\r\n\r\n    // useDispatch para ejecutar las acciones\r\n    const dispatch = useDispatch();\r\n    // useSelector para obtener los datos del state\r\n    const { activeEvent } = useSelector(state => state.calendar);\r\n\r\n    // useSelector para obtener los datos del store\r\n    const { modalOpen } = useSelector(state => state.ui);\r\n\r\n    const [ , setDateStart ] = useState(now.toDate());\r\n    const [ , setEndStart ] = useState(nowPlusOne.toDate());\r\n    const [ isTitleValid, setIsTitleValid ] = useState(true);\r\n    const [ formValues, setFormValues ] = useState(initEvent);\r\n    const { title, notes, start, end } = formValues; \r\n    \r\n    useEffect(() => {\r\n        \r\n        // si hay evento activo, settearlo al form values\r\n        if (activeEvent){\r\n            setFormValues(activeEvent);\r\n        \r\n        // si no, dejarlo en los valores por defecto\r\n        } else {\r\n            setFormValues(initEvent);\r\n        }\r\n        \r\n    }, [ activeEvent, setFormValues ]);\r\n    \r\n\r\n    const closeModal = () => {\r\n        dispatch(eventSetActive(null));\r\n        dispatch(uiCloseModal());\r\n        setFormValues(initEvent);\r\n    }\r\n\r\n    const handleStartDateChange = (e) => {\r\n        setDateStart(e);\r\n        setFormValues({\r\n            ...formValues,\r\n            start: e\r\n        });\r\n    }\r\n\r\n    const handleEndDateChange = (e) => {\r\n        setEndStart(e);\r\n        setFormValues({\r\n            ...formValues,\r\n            end: e\r\n        });\r\n    }\r\n\r\n    const handleInputChange = ({ target }) => {\r\n        setFormValues({\r\n            ...formValues,\r\n            [ target.name ]: target.value\r\n        });\r\n\r\n        // actualizar validaciones de titulo\r\n        setIsTitleValid((title.trim().length < 2)? false : true);\r\n    }\r\n\r\n    const handleSubmitForm = (e) => {\r\n        e.preventDefault();\r\n        \r\n        // validaciones de las fechas del formulario\r\n        const momentStart = moment(start);\r\n        const momentEnd = moment(end);\r\n\r\n        if (momentEnd.isSameOrBefore(momentStart)) {\r\n            return Swal.fire({\r\n                icon: 'error',\r\n                title: 'Oops...',\r\n                text: 'La fecha de inicio debe ser menor a la fecha de fin',\r\n              });\r\n        }\r\n\r\n        if (title.trim().length < 2){\r\n            setIsTitleValid(false);\r\n            return;\r\n        }\r\n\r\n        //TODO: guardar nota en la base de datos\r\n        if (!activeEvent) {\r\n            dispatch(eventStartAddNew(formValues));\r\n        } \r\n        \r\n        else if (activeEvent.title === '' && activeEvent.notes === '') {\r\n            dispatch(eventStartAddNew(formValues));\r\n        }\r\n        \r\n        else {\r\n            dispatch(eventStartUpdate(formValues));\r\n        }\r\n        \r\n        setIsTitleValid(true);\r\n        closeModal();\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <Modal\r\n            isOpen={ modalOpen }\r\n            // onAfterOpen={ closed => console.log('Modal abierto') }\r\n            onRequestClose={ closeModal }   // para cerrar el modal\r\n            style={ customStyles }      // estilos personalizados\r\n            className=\"modal\"       // clase modal con estilos\r\n            overlayClassName=\"modal-fondo\"  // clase para el fondo de atras el modal\r\n            closeTimeoutMS={ 200 }          // tiempo para cerrar el modal\r\n        >\r\n            <h2>\r\n                {\r\n                    (activeEvent) \r\n                    ? \r\n                    (activeEvent.title !== '' && activeEvent.notes !== '') ? 'Editar evento' : 'Nuevo evento'\r\n                    : 'Nuevo evento'\r\n                }\r\n            </h2>\r\n            <hr />\r\n            <form \r\n                className=\"container\"\r\n                onSubmit={ handleSubmitForm }\r\n            >\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Fecha y hora inicio</label>\r\n                    <DateTimePicker \r\n                        value={ start } \r\n                        className=\"form-control\"\r\n                        format=\"y-MM-dd h:mm:ss a\"\r\n                        amPmAriaLabel=\"Select am/pm\"    //  mostrar am/pm\r\n                        name=\"startDate\"\r\n                        onChange={ handleStartDateChange } // cambiar la fecha y actualizar el value\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Fecha y hora fin</label>\r\n                    <DateTimePicker \r\n                        value={ end }  \r\n                        className=\"form-control\"\r\n                        format=\"y-MM-dd h:mm:ss a\"\r\n                        amPmAriaLabel=\"Select am/pm\"\r\n                        // minDate={ dateStart }  validacion de la fecha minima\r\n                        onChange={ handleEndDateChange } \r\n                    />\r\n                </div>\r\n\r\n                <hr />\r\n                <div className=\"form-group\">\r\n                    <label>Titulo y notas</label>\r\n                    <input \r\n                        type=\"text\" \r\n                        className={ `form-control ${ isTitleValid ? 'is-valid' : 'is-invalid' }` }\r\n                        placeholder=\"Título del evento\"\r\n                        name=\"title\"\r\n                        autoComplete=\"off\"\r\n                        value={ title }\r\n                        onChange={ handleInputChange }\r\n                    />\r\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Una descripción corta</small>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <textarea \r\n                        type=\"text\" \r\n                        className=\"form-control\"\r\n                        placeholder=\"Notas\"\r\n                        rows=\"5\"\r\n                        name=\"notes\"\r\n                        value={ notes }\r\n                        onChange={ handleInputChange }\r\n                    ></textarea>\r\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Información adicional</small>\r\n                </div>\r\n\r\n                <button\r\n                    type=\"submit\"\r\n                    id=\"btn-save\"\r\n                    className=\"btn btn-outline-primary btn-block\"\r\n                >\r\n                    <AiFillSave />\r\n                    <span>&nbsp;Guardar</span>\r\n                </button>\r\n\r\n            </form>\r\n        </Modal>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { IoMdLogOut } from 'react-icons/io';\r\nimport { BiUser } from 'react-icons/bi';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { startLogout } from '../../actions/auth';\r\n\r\nimport '../../css/navbar.css';\r\n\r\nexport const Navbar = () => {\r\n\r\n  const { name } = useSelector(state => state.auth);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleLogout = () => {\r\n    dispatch(startLogout());\r\n  }\r\n\r\n  return (\r\n    <div className=\"navbar navbar-dark bg-dark mb-4\">\r\n        <div className=\"navbar-brand\">\r\n            <span>{ <BiUser size=\"1.1rem\" /> }&nbsp;</span>\r\n            <span>{ name }</span>   \r\n        </div>\r\n\r\n        <button className=\"btn btn-outline-danger\" onClick={ handleLogout }>\r\n            <IoMdLogOut size=\"1.1rem\" />\r\n            <span> Salir</span>\r\n        </button>\r\n    </div>\r\n  )\r\n}\r\n","export const messages = {\r\n    allDay: 'Todo el día',\r\n    previous: '<',\r\n    next: '>',\r\n    today: 'Hoy',\r\n    month: 'Mes',\r\n    week: 'Semana',\r\n    day: 'Día',\r\n    agenda: 'Agenda',\r\n    date: 'Fecha',\r\n    time: 'Hora',\r\n    event: 'Evento',\r\n    noEventsInRange: 'No hay eventos en este rango',\r\n    showMore: total => `+ Ver más (${ total })`\r\n};","\r\n// Floating Action Button\r\nimport React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { BsPlusLg } from 'react-icons/bs';\r\nimport { uiOpenModal } from '../../actions/ui';\r\nimport { eventSetActive } from '../../actions/calendar';\r\n\r\nexport const AddNewFab = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const handleClickNew = () => {\r\n        dispatch(uiOpenModal());\r\n        dispatch(eventSetActive(null));\r\n    }\r\n\r\n    return (\r\n        <button\r\n            className=\"btn btn-primary fab\"\r\n            onClick={ handleClickNew }\r\n        >\r\n            <BsPlusLg size=\"1.3rem\" />\r\n        </button>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { AiFillDelete } from 'react-icons/ai';\r\nimport { useDispatch } from 'react-redux';\r\nimport { eventStartDelete } from '../../actions/calendar';\r\n\r\nexport const DeleteEventFab = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const handleClickDelete = () => {\r\n        dispatch(eventStartDelete());\r\n    }\r\n\r\n    return (\r\n        <button \r\n            className=\"btn btn-danger fab-danger\"\r\n            onClick={ handleClickDelete }\r\n        >\r\n            <AiFillDelete size=\"1.3rem\" />\r\n            <span>&nbsp;Eliminar evento</span>\r\n        </button>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Calendar, momentLocalizer } from 'react-big-calendar';\r\n\r\nimport { CalendarEvent } from './CalendarEvent';\r\nimport { CalendarModal } from './CalendarModal';\r\nimport { Navbar } from '../ui/Navbar'\r\nimport { messages } from '../../helpers/calendar-messages-es';\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { uiOpenModal } from '../../actions/ui';\r\nimport { eventSetActive, eventStartLoading } from '../../actions/calendar';\r\nimport { AddNewFab } from '../ui/AddNewFab';\r\nimport { DeleteEventFab } from '../ui/DeleteEventFab';\r\nimport moment from 'moment';\r\nimport 'moment/locale/es';\r\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\r\nimport '../../css/calendar-screen.css';\r\n\r\n\r\nmoment.locale('es');\r\n\r\nconst localizer = momentLocalizer(moment);\r\n\r\n/*const events = [{\r\n    // formato de los eventos del calendario\r\n    title: 'Cumpleaños del Jefe',\r\n    start: moment().toDate(),\r\n    end: moment().add(2, 'hours').toDate(),\r\n    allDay: false,\r\n    //informacion adicional agregada por nosotros\r\n    user: {\r\n      _id: '123',\r\n      name: 'Miguel',\r\n    }\r\n}];*/\r\n\r\nexport const CalendarScreen = () => {\r\n\r\n  // useDispatch para ejecutar las acciones\r\n  const dispatch = useDispatch();\r\n\r\n\r\n  //leer del store los eventos\r\n  const { activeEvent, events } = useSelector(state => state.calendar);\r\n  const { uid } = useSelector(state => state.auth);\r\n\r\n  const [ view, setView ] = useState(\r\n    localStorage.getItem('lastView') || 'month'\r\n  );\r\n\r\n  useEffect(() => {\r\n\r\n      dispatch(eventStartLoading());\r\n      \r\n  }, [ dispatch ]);\r\n\r\n  // eventos para gestionar el double click y seleccion de evento\r\n  const onDoubleClick = (e) => {\r\n    dispatch(uiOpenModal());  \r\n  }\r\n\r\n  const onSelectEvent = (e) => {\r\n    dispatch(eventSetActive(e));\r\n  }\r\n\r\n  const onViewChange = (e) => {\r\n    // 'e' retorna: week, day, month, agenda\r\n    setView(e);\r\n    localStorage.setItem('lastView', e);\r\n  }\r\n\r\n  const eventStyleGetter = ( event, start, end, isSelected ) => {\r\n    \r\n    const _id = event.user\r\n\r\n    const style = {\r\n      backgroundColor: (uid === _id) ? '#aee8ff' : '#e5e5e5',\r\n      borderRadius: '0px',\r\n      color: '#000000',\r\n      opacity: 0.8,\r\n    }\r\n\r\n    return { style };\r\n  }\r\n\r\n  const onSelectSlot = (e) => {\r\n\r\n      if (e.action === 'click') {\r\n         dispatch(eventSetActive(null));\r\n\r\n      } else {\r\n          const { start, end, title = '', notes = '' } = e;\r\n          const event = { title, start, end, notes };\r\n          dispatch(eventSetActive(event));\r\n          dispatch(uiOpenModal());\r\n      }\r\n  }\r\n\r\n  //TODO: al hacer doble click en una celda del calendario, abrir el modal para agregar un nuevo evento con la fecha seleccionada\r\n\r\n  // components={ { event: CalendarEvent } } personalizar apariencia de los eventos\r\n  // del calendariocon el componente especificado en el parametro event.\r\n  // En otras palabras, sobreescribe el evento del calendario por el componente CalendarEvent.\r\n\r\n  return (\r\n    <div className=\"calendar-screen\">\r\n        <Navbar />\r\n\r\n        <Calendar\r\n          localizer={ localizer }\r\n          events={ events }\r\n          startAccessor=\"start\"\r\n          endAccessor=\"end\"\r\n          messages={ messages }  //cambiar los mesajes a español\r\n          eventPropGetter={ eventStyleGetter }  // cambiar estilos\r\n          onSelectEvent={ onSelectEvent }  \r\n          onDoubleClickEvent={ onDoubleClick }\r\n          onView={ onViewChange }               // cambiar la vista del calendario\r\n          onSelectSlot={ onSelectSlot }        // cambiar la vista del calendario\r\n          selectable={ true }\r\n          components={{\r\n            event: CalendarEvent,   // formato del evento del calendario (evento del calendario)\r\n          }}\r\n          view= { view } // cambiar la vista del calendario en donde se quedo el usuario\r\n        />\r\n\r\n        <AddNewFab />\r\n        \r\n        {\r\n          activeEvent && <DeleteEventFab />\r\n        }\r\n\r\n        <CalendarModal />\r\n\r\n    </div>\r\n  )\r\n}\r\n","\r\nimport React from 'react';\r\nimport { MutatingDots as Icon } from  'react-loader-spinner';\r\nimport '../../css/loading.css';\r\n\r\nexport const LoadingSpinner = () => {\r\n  return (\r\n    <div className=\"loading_icon\">\r\n        <Icon\r\n            height=\"100\"\r\n            width=\"100\"\r\n            color='grey'\r\n            ariaLabel='loading'\r\n        />\r\n    </div>\r\n  )\r\n}\r\n","\r\nimport React from 'react';\r\nimport { Navigate } from 'react-router-dom';\r\n\r\nexport const PrivateRoute = ({ children, uid }) => {\r\n  return !uid ? <Navigate to=\"/login\" /> : children\r\n}\r\n","\r\nimport React from 'react'\r\nimport { Navigate } from 'react-router-dom'\r\n\r\nexport const PublicRoute = ({ children, uid }) => {\r\n  return uid ? <Navigate to=\"/\" /> : children \r\n        \r\n}\r\n","import React, { useEffect } from 'react';\r\nimport {\r\n    BrowserRouter,\r\n    Routes,\r\n    Route,\r\n} from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { LoginScreen } from '../components/auth/LoginScreen';\r\nimport { CalendarScreen } from '../components/calendar/CalendarScreen';\r\nimport { startChecking } from '../actions/auth';\r\nimport { LoadingSpinner } from '../components/ui/LoadingSpinner';\r\nimport { PrivateRoute } from './PrivateRoute';\r\nimport { PublicRoute } from './PublicRoute';\r\n\r\nexport const AppRouter = () => {\r\n\r\n  const dispatch = useDispatch();\r\n  const { checking, uid } = useSelector(state => state.auth)\r\n\r\n  useEffect(() => {\r\n\r\n      dispatch(startChecking())\r\n\r\n  }, [ dispatch ]);\r\n\r\n  if (checking) {\r\n    return <LoadingSpinner />\r\n  }\r\n\r\n  return (\r\n    \r\n    <BrowserRouter>\r\n        <Routes>\r\n           { /* Login si no esta autenticado */ }\r\n            <Route path=\"/login\" element={ \r\n                <PublicRoute uid={ uid }>\r\n                    <LoginScreen /> \r\n                </PublicRoute>\r\n            } />\r\n            <Route path=\"/\" element={ \r\n                <PrivateRoute uid={ uid }>\r\n                  <CalendarScreen />\r\n                </PrivateRoute>\r\n             } />\r\n            <Route path=\"*\" element={ <LoginScreen /> } />\r\n        </Routes>\r\n    </BrowserRouter>\r\n  )\r\n}\r\n","import { types } from '../types/types';\r\n\r\nconst initialState = {\r\n    checking: true,               // Al cargar la app verificar si esta autenticado (checking).\r\n    // uid: null, (ambos se agregan al autenticarse).\r\n    // name: null\r\n};\r\n\r\nexport const authReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case types.authLogin:\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n                checking: false,\r\n            }\r\n\r\n        case types.authCheckingFinish:\r\n            return {\r\n                ...state,\r\n                checking: false\r\n            }\r\n\r\n        case types.authLogout:\r\n            return {\r\n                checking: false\r\n            }\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n\r\n}","\r\nimport { types } from '../types/types';\r\n\r\n/* const initialState = {\r\n    events: [{\r\n        // formato de los eventos del calendario\r\n        id: new Date().getTime(),\r\n        title: 'Cumpleaños del Jefe',\r\n        start: moment().toDate(),\r\n        end: moment().add(2, 'hours').toDate(),\r\n        allDay: false,\r\n        //informacion adicional agregada por nosotros\r\n        user: {\r\n          _id: '123',\r\n          name: 'Miguel',\r\n        }\r\n    }],\r\n    activeEvent: null\r\n}; */\r\n\r\nconst initialState = {\r\n    events: [],\r\n    activeEvent: null\r\n}\r\n\r\nexport const calendarReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case types.eventSetActive:\r\n            return {\r\n                ...state,\r\n                activeEvent: action.payload,\r\n            }\r\n\r\n        case types.eventAddNew:\r\n            return {\r\n                ...state,\r\n                events: [...state.events, action.payload],\r\n            }\r\n        \r\n        case types.eventUpdated:\r\n            return {\r\n                ...state,\r\n                events: state.events.map(event => \r\n                    event._id === action.payload._id ? action.payload\r\n                    : event\r\n                )\r\n            }\r\n\r\n        case types.eventDeleted:\r\n            return {\r\n                ...state,\r\n                events: state.events.filter(event => event._id !== state.activeEvent._id),\r\n                activeEvent: null\r\n            }\r\n\r\n        case types.eventLoaded:\r\n            return {\r\n                ...state,\r\n                events: action.payload\r\n            }\r\n\r\n        case types.eventClear:\r\n            return {\r\n                ...initialState\r\n            }\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n\r\n}","import { types } from '../types/types';\r\n\r\nconst initialState = {\r\n    modalOpen: false\r\n}\r\n\r\nexport const uiReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case types.uiOpenModal: \r\n            return {\r\n                ...state,\r\n                modalOpen: true\r\n            };\r\n\r\n        case types.uiCloseModal:\r\n            return {\r\n                ...state,\r\n                modalOpen: false\r\n            };\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n\r\n}","import { combineReducers } from 'redux';\r\nimport { authReducer } from './authReducer';\r\nimport { calendarReducer } from './calendarReducer';\r\nimport { uiReducer } from './uiReducer';\r\n\r\nexport const rootReducer = combineReducers({\r\n    ui: uiReducer,\r\n    calendar: calendarReducer,\r\n    auth: authReducer\r\n});\r\n","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport { rootReducer } from '../reducers/rootReducer';\r\nimport thunk from 'redux-thunk';\r\n\r\n// configurar herramientas de desarrollo de redux, validando si estan instaladas o no\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\nexport const store = createStore(\r\n    rootReducer,\r\n    composeEnhancers(\r\n        applyMiddleware(thunk)\r\n    )\r\n);\r\n\r\n\r\n","import React from 'react';\r\nimport { Provider } from 'react-redux';\r\nimport { AppRouter } from './routers/AppRouter';\r\nimport { store } from './store/store';\r\n\r\nexport const CalendarApp = () => {\r\n  return (\r\n    <Provider store={ store }>\r\n        <AppRouter />\r\n    </Provider>\r\n  )\r\n}\r\n","import React from 'react';\nimport { render } from 'react-dom';\nimport { CalendarApp } from './CalendarApp';\n\nimport './css/styles.css';\n\n\nrender(\n  <CalendarApp />,\n  document.getElementById('root')\n);"],"sourceRoot":""}